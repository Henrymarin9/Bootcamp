html {
    box-sizing: border-box;
    font-size: 16px;
    font-family: sans-serif;
    scroll-behavior: smooth;
  }

  *,
  *::after,
  *::before {
    box-sizing: inherit;
  }

  a[href="#top"] {
    margin: 1rem;
    display: block;
    font-size: 2rem;
    text-align: center;
    text-decoration: none;
  }

  p {
    margin: 0;
  }

  h2 {
    margin-top: 50vh;
    text-align: center;
  }

  img {
    margin: auto;
    display: block;
    max-width: 100%;
    height: auto;
  }

  .menu {
    margin-bottom: 100vh;
    font-size: 125%;
  }

  .menu li {
    margin-bottom: 1rem;
  }

  .container {
    margin: 0 auto;
    width: 80%;
    height: 80vh;
    background-color: #222;
    border: medium solid #000;
  }

  .item {
    padding: 1rem;
    font-size: 1.25rem;
    background-color: #666;
    border: medium solid #999;
  }


  /*Creacion de Grid*/
  .grid-explicit{
    display: grid;
    /*Grid columns x rows*/

    /*Grid de 3x3*/
    grid-template-rows: 2rem 20vh 30%;
    grid-template-columns: 50% 100px 1fr;

    /*Grid 5x4*/
    grid-template-columns: repeat( 5 , 1fr );
    grid-template-rows: repeat( 4 , auto );

    /*Grid 4x5*/
    grid-template-columns: 20% repeat(2,30%) 20%;
    grid-template-rows: repeat(5,auto);

    /*gap: row column*/
    gap: 1vh 1vw;
    gap: 0;
  }

  /*Posicionamiento con Grid Lines*/
  .grid-explicit .item:nth-child(10){
    color: cyan;

    grid-row-start: 2;
    grid-row-end: 3;
    grid-column-start: 2;
    grid-column-end: 3;

    /* grid-row: grid-row-sart / grid-row-end ; */
    grid-row: 2 / 3 ;
    grid-column: 3 / 5;


    /* grid-area: grid-row / grid-column */
    grid-area: 2/3 / 3/5 ;
  }

  .grid-explicit .item:nth-child(12){
    color: cyan;
    /*span: le dice abarca n° rows o n° columns */
    grid-row: span 2;
    grid-column: span 3;

  }

  .grid-explicit .item:nth-child(15){
    color: cyan;
    /*1 = (numero de linea)*/
    grid-row: 1/span 2;
    grid-column: 1/span 2;
  }

 /*Etiquetando con nombre las lineas del grid*/
  .grid-line-names{
    display: grid;
    /*Grid 3x3*/
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3,1fr);
    grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4] 1fr;
    grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4] 1fr;
  }

  .grid-line-names .item:nth-child(3){
    color: cyan;
    grid-row: linea-r3 / linea-r4;
    grid-column: linea-c1 / linea-c4;
  }


 /*asignacion con nombres a areas del grid*/
 .grid-areas{
    display: grid;
    /*Grid 2x3*/
    grid-template-columns: 1fr 200px;
    grid-template-rows: 100px repeat(2,1fr) 60px;
    /*Con esta propiedad nombramos a las areas del grid*/
    grid-template-areas: 
        "header header"
        "content sidebar"
        "content ."
        "footer footer";
 }

 .header{
    grid-area: header;
 }
 .content{
    grid-area: content;
 }
 .sidebar{
    grid-area: sidebar;
 }
 .footer{
    grid-area: footer;
 }


/*Grid Implicita y Display: inline-grid*/

.grid-implicit{
    /*Grid de 4x3*/
    display: grid;
    
    grid-template-columns: repeat(4 , 1fr);
    grid-template-rows: repeat(3 , 200px);

}

.grid-implicit{
    /*Grid de 4x3*/
    width: 40%;
    display: inline-grid;
    grid-template-columns: repeat(4 , 1fr);
    grid-template-rows: repeat(3 , 200px);

}

/*Grid Flow*/

.grid-flow{
    display: grid;
    /*Grid 5x3*/
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(3, 150px);

    grid-auto-flow: row;
        /*propiedad que sirve para determinar el flujo de la cuadricula*/
    grid-auto-rows: 100px;
        /*Le indica a las filas inplicitas que dimension va a tener*/
    
    grid-auto-flow: column;
    grid-auto-columns: 50px;
}

/*Grid flow dense*/

.grid-flow-dense{
    display: grid;
    /*Grid de 5x4*/
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(4, 200px);
    /* row/column dense: cubre partes de la grilla que quedaba vacia en direccion de row o de column */
    grid-auto-flow: row dense;
    grid-auto-flow: column dense;
    
}
/*
.grid-flow-dense .item:nth-child(9){
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
}
*/
.grid-flow-dense .item:nth-child(11){
    color: cyan;
    grid-row: span 3;
    grid-column: span 3;
}

/*Superposicion en Grid*/
.grid-layers{
    display: grid;
    /*Grid de 4x4*/
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(4, 1fr);
}
.grid-layers .item:nth-child(1){
    background-color: yellow;
    grid-column: 1 / 3;
    grid-row: 1 / 3;
}
.grid-layers .item:nth-child(2){
    background-color: blue;
    grid-column: 3 / 5;
    grid-row: 1 / 3;
}
.grid-layers .item:nth-child(3){
    background-color: green;
    grid-column: 1 / 3;
    grid-row: 3 / 5;
}
.grid-layers .item:nth-child(4){
    background-color: orange;
    grid-column: 3 / 5;
    grid-row: 3 / 5;
}
.grid-layers .item:nth-child(5){
    background-color: violet;
    grid-column: 2 /4;
    grid-row: 2 / 4;

    opacity: 75%;
}

/*Cambio de orden de los Items en Grid*/
.grid-order{
    display: grid;
    /*Grid 3x2*/
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);
}

.grid-order .item:nth-child(1){
    /*0 valor por default, acepta valores negativos y positivos*/
    order: 1;
}

.grid-order .item:nth-child(2){
    /*0 valor por default*/
    order: 2;
}

.grid-order .item:nth-child(5){
    /*0 valor por default*/
    order: -1;
}

.grid-align{
    display: grid;
    /*Grid 3x2*/
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);

    /*Alinea las celdas en el eje x*/
    justify-items: stretch;
    justify-items: start;
    justify-items: end;
    justify-items: center;

    /*Alinea las celdas en el eje y*/
    align-items: stretch;
    align-items: center;
    align-items: start;
    align-items: end;
    align-items: center;
}

.grid-align .item:nth-child(4){
    /*Para modificar la pocision especifica de un elemento*/
    justify-self: start;
    align-self: start;
}

.grid-align-tracks{
    display: grid;
    /*Grid 3x2*/
    grid-template-columns: repeat(3, 200px);
    grid-template-rows: repeat(2, 200px);

    /*Para la alineacion de filas o columnas en x*/
    justify-content: start;
    justify-content: end;
    justify-content: center;
    justify-content: space-between;
    justify-content: space-around;
    justify-content: space-evenly;

    /*Para la alineacion de filas o columnas en y*/
    align-content: start;
    align-content: end;
    align-content: center;
    align-content: space-between;
    align-content: space-around;
    align-content: space-evenly;
}

/*Definir tamaños min y max en tracks*/
.grid-min-max{
    display: grid;
    /*Grid 4x2*/
    grid-template-columns: repeat(4, 1fr);
    /*minmax(100px 200px) le ordeno cuales seran los min y max que tomara la celda*/
    grid-template-columns: repeat(4, minmax(100px 200px));
    grid-template-columns: repeat(4, minmax(min-content 200px));
    grid-template-columns: repeat(4, minmax(100px min-content));
    grid-template-columns: repeat(4, minmax(100px max-content));
    grid-template-columns: repeat(4, minmax(max-content 200px));
    grid-template-columns: repeat(4, minmax(min-content max-content));

    /* Se puede aplicar a rows tambien */
}

/*Patrones de repeticion*/
.grid-repeat{
    display: grid;
    /*Grid 4x2*/
    /*Cada uno de los % indica el ancho de las columnas*/
    grid-template-columns: repeat(4, 10% 20% 30% 40%);
    grid-template-columns: repeat(1, 10% 20% 30% 40%);
}